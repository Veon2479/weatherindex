name: metrics

on:
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  linters:
    name: Linter & Version Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.18'

      - name: Check version
        id: check_version
        run: |
          scripts/test/check_version.sh

      - name: Lint dependencies
        id: lint_deps
        run: |
          python -m pip install --upgrade pip
          pip install autopep8

      - name: Lint
        id: run_lint
        run: |
          ./scripts/lint/check_code.sh

  tests-metrics:
    name: Testing metrics
    runs-on: ubuntu-latest
    needs: linters
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build docker image
        run: |
          docker build \
            -f Dockerfile.metrics \
            --target metrics-ci \
            --platform linux/amd64 \
            -t metrics-ci .
      - name: Run tests
        run: |
          docker run -t metrics-ci scripts/test/run_tests.sh

  tests-forecast:
    name: Testing forecast
    runs-on: ubuntu-latest
    needs: linters
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build docker image
        run: |
          docker build \
            -f Dockerfile.forecast \
            --target metrics-forecast-ci \
            --platform linux/amd64 \
            -t metrics-forecast-ci .
      - name: Run tests
        run: |
          docker run -t metrics-forecast-ci scripts/test/run_tests.sh

  tests-sensors:
    name: Testing sensors
    runs-on: ubuntu-latest
    needs: linters
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build docker image
        run: |
          docker build \
            -f Dockerfile.sensors \
            --target metrics-sensors-ci \
            --platform linux/amd64 \
            -t metrics-sensors-ci .
      - name: Run tests
        run: |
          docker run -t metrics-sensors-ci scripts/test/run_tests.sh
